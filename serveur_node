const express = require('express')
const app = express()
const db = require('sqlite')
const PORT = 8080


app.use(express.json())
app.use(express.urlencoded({
 extended: true
}))


app.get('/toto', (req, res, next) => {
 console.log('toto')
 res.send('toto')
})


app.post('/user', (req, res, next) => {
 console.log(req.body)
 res.send(req.body)
})






db.open('todolist.db').then(() => {
  console.log('Database ready')
  return Promise.all([
    db.run("CREATE TABLE IF NOT EXISTS TODOS (message, completion, created_at, updated_at)")
  ])
})
.then(() => {
  console.log('tables ready')
})
.catch(() => console.log('une erreur est survenue'))






app.get('/todos', (req, res, next) => {
  db.open('todolist.db').then(() => {
    console.log('je renvoie les resultats')
    return Promise.all([
      db.all("SELECT * FROM TODOS")
    ])
  })
  .then(() => {
    console.log('resultats envoyÃ©s')
  })
  .catch(() => console.log('une erreur est survenue'))
  res.send('le get todos')
})


app.post('/todos', (req, res, next) => {
  db.open('todolist.db').then(() => {
    console.log('Je rajoute des champs')
    return Promise.all([
      db.get("INSERT INTO TODOS (monmessage, nanana, nanana, nanana"))

    ])
  })
  .then(() => {
    console.log('tables ready')
  })
  .catch(() => console.log('une erreur est survenue'))
  res.send('le post todos')
  })






app.use((req, res, next) => {
 res.status(404)
 res.send('Not Found')
 next()
})





app.listen(PORT, () => {
 console.log('Serveur sur port : ', PORT)
})



/*
faire un get /todos
select * from todos dans un db .all pour renvoyer tout les resultat
il renvoi une promesse

faire un app.post pour creer un objet de la ressource sur /todos qui permet de creer une todos  a l'aide de postman

pour updated_ad et created_at voir sur date.now

db.all
db.get
db.run


reviser sur inquirer express commander (promesse)
*/
